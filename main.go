package main


import(
  "fmt"
)

func main(){
  fmt.Println("123412341234")
}


//
// func minMalwareSpread(graph [][]int, initial []int) int {
//
//     restGoodNodeCount := []int{}
//
//     for k,v := range initial {
//
//
//     }
//
// }
//
//
// func lookForGoodNodeCount(graph [][]int, initial []int)int{
//
//
// }



func removeBadNodeConnection(graph [][]int, badIdx int)[][]int{

  res := make([][]int,0, len(graph))
  for nodeIdx ,v := range graph{
    //reset connected node value(0) of the bad node.
    if nodeIdx == badIdx{
      connectArr := make([]int,0,len(v))
      for k,_ := range v{
        // except itself.
        if k == badIdx{
          connectArr =  append(connectArr,1)
          continue
        }
        connectArr = append(connectArr,0)
      }
      res = append(res,connectArr)
      continue
    }

    connectArr := make([]int,0,len(v))
    for connectIdx,connectValue := range v{
      if connectIdx  == badIdx && connectValue == 1{
        connectArr = append(connectArr,0)
      }else{
          connectArr = append(connectArr,connectValue)
      }
    }
    res = append(res, connectArr)
  }

  return res
}
